service: aws-node-express-dynamodb-api-project
frameworkVersion: '3'

custom:
  tableName: 'users-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs14.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ UsersTable, Arn ]
            - Fn::Join: ['/', ["Fn::GetAtt": [ UsersTable, Arn ], 'index', 'statusAndCreatedAt']]
            - arn:aws:dynamodb:us-east-1:*:*
            - arn:aws:lambda:us-east-1:*:* # Had to add this too
  environment:
    USERS_TABLE: ${self:custom.tableName}

functions:
  usersApi:
    handler: userHandler.handler
    events:
      - httpApi: '*'
  create:
    handler: src/handler/createTodo.createTodo
    events:
      - http:
          path: todos
          method: post
          cors: true
  list:
    handler: src/handler/listTodo.listTodo
    events:
      - http:
          path: todos
          method: get
          cors: true
  get:
    handler: src/handler/getTodo.getTodo
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true
  update:
    handler: src/handler/updateTodo.updateTodo
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true
  delete:
    handler: src/handler/deleteTodo.deleteTodo
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: status
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: statusAndCreatedAt
            KeySchema:
              - AttributeName: status
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}

    TestTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: 'Test'
